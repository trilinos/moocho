// ///////////////////////////////////////////////////////////////
// AbstractLinAlgPackPublicTypes.ud
//
// Copyright (C) 2001 Roscoe Ainsworth Bartlett
//
// This is free software; you can redistribute it and/or modify it
// under the terms of the "Artistic License" (see the web site
//   http://www.opensource.org/licenses/artistic-license.html).
// This license is spelled out in the file COPYING.
//
// This software is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// above mentioned "Artistic License" for more details.

// Main interface library

typedef AbstractLinAlgPack::size_type   size_type;
typedef AbstractLinAlgPack::value_type  value_type;
typedef AbstractLinAlgPack::index_type  index_type;

using RangePack::Range1D;

using AbstractLinAlgPack::InnerProduct;
using AbstractLinAlgPack::VectorSpaceFactory;
using AbstractLinAlgPack::VectorSpace;
using AbstractLinAlgPack::Vector;
using AbstractLinAlgPack::VectorMutable;

using AbstractLinAlgPack::MatrixBase;
using AbstractLinAlgPack::MatrixOp;
using AbstractLinAlgPack::MatrixNonsing;
using AbstractLinAlgPack::MatrixOpNonsing;
using AbstractLinAlgPack::MatrixSymOp;
using AbstractLinAlgPack::MatrixSymNonsing;
using AbstractLinAlgPack::MatrixSymOpNonsing;
using AbstractLinAlgPack::MatrixSymDiag;

using AbstractLinAlgPack::MultiVector;
using AbstractLinAlgPack::MultiVectorMutable;

using AbstractLinAlgPack::MatrixSymSecant;

using AbstractLinAlgPack::BasisSystem;
using AbstractLinAlgPack::BasisSystemPerm;
using AbstractLinAlgPack::BasisSystemFactory;

using AbstractLinAlgPack::Permutation;

// template classes

using AbstractLinAlgPack::SparseElement;
using AbstractLinAlgPack::SparseVector;
using AbstractLinAlgPack::SparseVectorSlice;

// concreate types

using AbstractLinAlgPack::EtaVector;
using AbstractLinAlgPack::GenPermMatrixSlice;
using AbstractLinAlgPack::SpVector;
using AbstractLinAlgPack::SpVectorSlice;

// Tools library

using AbstractLinAlgPack::PermVector;

using AbstractLinAlgPack::MatrixSymInitDiag;
using AbstractLinAlgPack::MatrixSymDiag;

using AbstractLinAlgPack::BasisSystemComposite;
using AbstractLinAlgPack::VectorSpaceBlock;
using AbstractLinAlgPack::VectorMutableBlock;
using AbstractLinAlgPack::MatrixOpSubView;
using AbstractLinAlgPack::MatrixComposite;
using AbstractLinAlgPack::MatrixSymIdent;
using AbstractLinAlgPack::MatrixSymDiagStd;
using AbstractLinAlgPack::MatrixZero;
using AbstractLinAlgPack::MatrixPermAggr;
using AbstractLinAlgPack::MatrixOpNonsingAggr;

using AbstractLinAlgPack::VectorSpaceTester;
using AbstractLinAlgPack::VectorSpaceTesterSetOptions;
using AbstractLinAlgPack::MatrixOpNonsingTester;
using AbstractLinAlgPack::BasisSystemTester;
using AbstractLinAlgPack::BasisSystemTesterSetOptions;
