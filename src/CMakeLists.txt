
INCLUDE(PackageLibraryMacros)

#
# A) Package-specific configuration options
#

PACKAGE_CONFIGURE_FILE(Moocho_Config.h)

#
# B) Define the header and source files (and directories)
#

SET(HEADERS "")
SET(SOURCES "")

SET(DIR "${CMAKE_CURRENT_BINARY_DIR}")
INCLUDE_DIRECTORIES(${DIR})
APPEND_SET(HEADERS ${DIR}/Moocho_Config.h)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)

#
# MoochoUtilities
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoUtilities/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)
APPEND_GLOB(SOURCES ${DIR}/*.f)

#
# IterationPack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/IterationPack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.ud)
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

#
# RTOpPack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/RTOpPack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/RTOpPack/src/base)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.h)
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.c)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/RTOpPack/src/std_ops)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.h)
APPEND_GLOB(SOURCES ${DIR}/*.c)

#
# DenseLinAlgPack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/DenseLinAlgPack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.ud)
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

#
# AbstractLinAlgPack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/AbstractLinAlgPack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.ud)
APPEND_GLOB(HEADERS ${DIR}/*.hpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/AbstractLinAlgPack/src/abstract/interfaces)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/AbstractLinAlgPack/src/abstract/tools)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/AbstractLinAlgPack/src/serial/interfaces)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/AbstractLinAlgPack/src/serial/implementations)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)
APPEND_GLOB(SOURCES ${DIR}/*.f)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/AbstractLinAlgPack/src/serial/solvers)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

#
# NLPInterfacePack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/NLPInterfacePack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.ud)
APPEND_GLOB(HEADERS ${DIR}/*.hpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/NLPInterfacePack/src/abstract/interfaces)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/NLPInterfacePack/src/abstract/tools)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/NLPInterfacePack/src/abstract/test)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/NLPInterfacePack/src/serial)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

#
# ConstrainedOptPack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/ConstrainedOptPack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.ud)
APPEND_GLOB(HEADERS ${DIR}/*.hpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/ConstrainedOptPack/src/decompositions)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/ConstrainedOptPack/src/globalization)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/ConstrainedOptPack/src/matrices)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/ConstrainedOptPack/src/misc)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/ConstrainedOptPack/src/qpsolvers)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)
APPEND_GLOB(SOURCES ${DIR}/*.f)

#
# MoochoPack
#

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoPack/src)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoPack/src/std)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoPack/configurations)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoPack/configurations/Shared)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoPack/configurations/MamaJama)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)

SET(DIR ${CMAKE_CURRENT_SOURCE_DIR}/MoochoPack/configurations/IpConfig)
INCLUDE_DIRECTORIES(${DIR})
APPEND_GLOB(HEADERS ${DIR}/*.hpp)
APPEND_GLOB(SOURCES ${DIR}/*.cpp)


#
# C) Define the targets for package's library(s)
#

PACKAGE_ADD_LIBRARY(
  moocho
  HEADERS ${HEADERS}
  SOURCES ${SOURCES}
  )
