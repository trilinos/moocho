(FRAMEWORK, INSTALL) {
    TESTS = ./MoochoUtilities/test_stop_watch.exe;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ./IterationPack/TestIterationPack.exe;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ./DenseLinAlgPack/TestDenseLinAlgPack.exe;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=2
      --nI=1
      --bw=1
      --mI=0
      --xo=0.1
      --diag-scale=1e+1
      --nlp-selects-basis
      ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=2
      --nI=2
      --bw=2
      --mI=0
      --xo=0.1
      --diag-scale=1e+1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=1000
      --nI=8
      --bw=5
      --mI=0
      --nlp-selects-basis
      --xo=0.1
      --diag-scale=1e+3
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=1000
      --nI=300
      --bw=20
      --mI=0
      --nlp-selects-basis
      --xo=0.1
      --diag-scale=1e+2
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=8
      --nI=2
      --bw=2
      --mI=4
      --xo=0.1
      --diag-scale=1e+1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=100
      --nI=50
      --bw=100
      --mI=100
      --nlp-selects-basis
      --xo=0.1
      --diag-scale=1e+1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=100
      --nI=4
      --bw=20
      --mI=0
      --xo=0.1
      --diag-scale=1e+3
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=4
      --nI=4
      --bw=2
      --mI=0
      --xo=0.1
      --diag-scale=1e+3
      --xIl=0.01
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=2
      --nI=2
      --ignore-constriants
      --xo=0.1
      --xIl=0.01
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=100
      --nI=100
      --ignore-constriants
      --xo=0.1
      --xIl=0.01
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPDirect/ExampleNLPDirect.exe;
    ARGS = 
      --n=4
      --xo=0.1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPDirect/ExampleNLPDirect.exe;
    ARGS = 
      --n=4
      --xo=0.2
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPDirect/ExampleNLPDirect.exe;
    ARGS = 
      --n=1000
      --xo=0.2
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPFirstOrder/ExampleNLPFirstOrder.exe;
    ARGS = 
      --n=4
      --xo=0.1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPFirstOrder/ExampleNLPFirstOrder.exe;
    ARGS = 
      --n=4
      --xo=0.2
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPFirstOrder/ExampleNLPFirstOrder.exe;
    ARGS = 
      --n=1000
      --xo=0.2
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=1.0
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --nlp-selects-basis
      --linear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=1.0
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --nlp-selects-basis
      --nonlinear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=1.0
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --no-nlp-selects-basis
      --nonlinear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=0.01
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --no-nlp-selects-basis
      --nonlinear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=0.01
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --no-nlp-selects-basis
      --linear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --do-sim
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --x00=0.9
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --x00=0.9
      --do-sim
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --xt0=0.9
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --xt0=0.9
      --do-sim
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../example/NLPThyraEpetraAdvDiffReactOpt/square.1;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../example/NLPThyraEpetraAdvDiffReactOpt/square.1 --x0=1.0 --p0=0.0 --reaction-rate=1e-5;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../example/NLPThyraEpetraAdvDiffReactOpt/square.2;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../example/NLPThyraEpetraAdvDiffReactOpt/square.2 --x0=1.0 --p0=0.0 --reaction-rate=1e-5;
    COMM = SERIAL;
}
