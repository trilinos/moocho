#
# Test cases for all of MOOCHO
#

(FRAMEWORK, INSTALL) {
    TESTS = ./MoochoUtilities/test_stop_watch.exe;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ./IterationPack/TestIterationPack.exe;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ./DenseLinAlgPack/TestDenseLinAlgPack.exe;
    COMM = SERIAL, MPI(1);
}

#
# Test ExampleNLPBanded.exe
#

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=2
      --nI=1
      --bw=1
      --mI=0
      --xo=0.1
      --diag-scale=1e+1
      --nlp-selects-basis
      ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=2
      --nI=2
      --bw=2
      --mI=0
      --xo=0.1
      --diag-scale=1e+1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=1000
      --nI=8
      --bw=5
      --mI=0
      --nlp-selects-basis
      --xo=0.1
      --diag-scale=1e+3
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=1000
      --nI=300
      --bw=20
      --mI=0
      --nlp-selects-basis
      --xo=0.1
      --diag-scale=1e+2
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=8
      --nI=2
      --bw=2
      --mI=4
      --xo=0.1
      --diag-scale=1e+1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=100
      --nI=50
      --bw=100
      --mI=100
      --nlp-selects-basis
      --xo=0.1
      --diag-scale=1e+1
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=100
      --nI=4
      --bw=20
      --mI=0
      --xo=0.1
      --diag-scale=1e+3
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=4
      --nI=4
      --bw=2
      --mI=0
      --xo=0.1
      --diag-scale=1e+3
      --xIl=0.01
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=2
      --nI=2
      --ignore-constriants
      --xo=0.1
      --xIl=0.01
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPBanded/ExampleNLPBanded.exe;
    ARGS = 
      --nD=100
      --nI=100
      --ignore-constriants
      --xo=0.1
      --xIl=0.01
       ;
    COMM = SERIAL;
}

#
# Test ExampleNLPDirect.exe
#

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPDirect/ExampleNLPDirect.exe;
    ARGS = 
      --n=4
      --xo=0.1
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPDirect/ExampleNLPDirect.exe;
    ARGS = 
      --n=4
      --xo=0.2
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPDirect/ExampleNLPDirect.exe;
    ARGS = 
      --n=1000
      --xo=0.2
       ;
    COMM = SERIAL, MPI(1);
}

#
# Test ExampleNLPFirstOrder.exe
#

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPFirstOrder/ExampleNLPFirstOrder.exe;
    ARGS = 
      --n=4
      --xo=0.1
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPFirstOrder/ExampleNLPFirstOrder.exe;
    ARGS = 
      --n=4
      --xo=0.2
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/ExampleNLPFirstOrder/ExampleNLPFirstOrder.exe;
    ARGS = 
      --n=1000
      --xo=0.2
       ;
    COMM = SERIAL, MPI(1);
}

#
# Test NLPWBCounterExample.exe
#

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=1.0
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --nlp-selects-basis
      --linear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=1.0
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --nlp-selects-basis
      --nonlinear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=1.0
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --no-nlp-selects-basis
      --nonlinear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=0.01
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --no-nlp-selects-basis
      --nonlinear-obj
       ;
    COMM = SERIAL;
}

(FRAMEWORK, INSTALL) {
    TESTS = ../example/NLPWBCounterExample/NLPWBCounterExample.exe;
    ARGS = 
      --a=0.0
      --b=0.01
      --x1-init=0.0
      --x2-init=0.0
      --x3-init=0.0
      --no-nlp-selects-basis
      --linear-obj
       ;
    COMM = SERIAL;
}

#
# Test NLPThyraEpetraModelEval4DOpt.exe
#

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = --external-lowsf;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = --do-sim;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = --external-lowsf --do-sim;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --x00=0.9
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --x00=0.9
      --do-sim
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --xt0=0.9
       ;
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraModelEval4DOpt/NLPThyraEpetraModelEval4DOpt.exe;
    ARGS = 
      --xt0=0.9,
      --do-sim
       ;
    COMM = SERIAL, MPI(1);
}

#
# Test NLPThyraEpetraAdvDiffReactOpt.exe
#

#
# --do-sim
#

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=8\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 --x0=1.0 --p0=0.0 --reaction-rate=1e-5 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=6\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=7\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 --x0=1.0 --p0=0.0 --reaction-rate=1e-5 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=6\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK,INSTALL,MOOCHOBELOSP2) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.9x9.2 --use-first-order --moocho-extra-options="MoochoSolver\{test_nlp=false\}:NLPSolverClientInterface\{opt_tol=1e-6\,feas_tol=1e-8\,max_iter=11\,journal_output_level=PRINT_NOTHING\}" \
      --extra-linear-solver-params="<ParameterList> <Parameter name=\"Linear Solver Type\" type=\"string\" value=\"AztecOO\"/></ParameterList>";
    COMM = MPI(2);
}

(FRAMEWORK,INSTALL,MOOCHOBELOSP4) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-sim --len-x=1.0 --len-y=10.0 --local-nx=3 --local-ny=4 --reaction-rate=1e-3 \
      --use-first-order \
      --moocho-extra-options="MoochoSolver\{test_nlp=false\}:NLPSolverClientInterface\{opt_tol=1e-3\,feas_tol=1e-8\,max_iter=11\,journal_output_level=PRINT_NOTHING\}" \
      --extra-linear-solver-params="<ParameterList> <Parameter name=\"Linear Solver Type\" type=\"string\" value=\"AztecOO\"/></ParameterList>";
    COMM = MPI(2,4);
}

#
# --do-opt
#

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --use-direct --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --use-direct --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
      --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}" \
      --extra-linear-solver-params="<ParameterList> <Parameter name=\"Linear Solver Type\" type=\"string\" value=\"AztecOO\"/></ParameterList>";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --use-first-order --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
      --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}" \
      --extra-linear-solver-params="<ParameterList> <Parameter name=\"Linear Solver Type\" type=\"string\" value=\"AztecOO\"/></ParameterList>";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --use-direct --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
      --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}" \
      --extra-linear-solver-params="<ParameterList> <Parameter name=\"Linear Solver Type\" type=\"string\" value=\"AztecOO\"/></ParameterList>";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --use-first-order --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.1 \
      --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}" \
      --extra-linear-solver-params="<ParameterList> <Parameter name=\"Linear Solver Type\" type=\"string\" value=\"AztecOO\"/></ParameterList>";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --np=1 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=16\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --np=4 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=39\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --beta=1e+3 --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --moocho-extra-options="NLPSolverClientInterface\{opt_tol=0.2\,max_iter=25\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --use-direct --beta=1e+3 --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --moocho-extra-options="NLPSolverClientInterface\{opt_tol=0.2\,max_iter=25\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --reaction-rate=1e+5 --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --moocho-extra-options="NLPSolverClientInterface\{max_iter=15\,journal_output_level=PRINT_NOTHING\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --do-opt --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
    --moocho-extra-options="NLPSolverClientInterface\{opt_tol=1e-4\,feas_tol=1e-10\,max_iter=52\,journal_output_level=PRINT_ALGORITHM_STEPS\}:DecompositionSystemStateStepBuilderStd\{range_space_matrix=ORTHOGONAL\}";
    COMM = SERIAL, MPI(1);
}

(FRAMEWORK, INSTALL, TEST1) {
  TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/_run-varied-tests.pl;
  ARGS = --do-serial --exe=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe --beta=0.0 --reaction-rate=1e-2 --local-nx=5 --global-ny=5 --starting-num-procs=1 --max-num-procs=1 --starting-model-np=3 --use-amesos --solve-fwd-prob --x0=0.001 --p0=1.0 --p-solu-scale=20.0 --do-analytic --do-finite-diff --fd-step-len=1e-8 --do-black-box --bb-fd-step-len=1e-7 --extra-args="--use-direct --fwd-newton-tol=1e-10 --linear-solver-params-used-file=linear-solver.used.xml";
  COMM = SERIAL;
}

#(FRAMEWORK,MOOCHOBELOS1) {
#    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
#    ARGS = --do-opt --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.2 \
#      --use-direct --np=10 \
#      --lowsf-extra-params="<ParameterList><Parameter name=\"Default Rel Res Norm\" type=\"double\" value=\"1e-04\"/><Parameter name=\"Block Size\" type=\"int\" value=\"11\"/></ParameterList>" \
#      --moocho-extra-options="NLPSolverClientInterface\{feas_tol=1e-3\,opt_tol=0.50\,max_iter=21\,journal_output_level=PRINT_ALGORITHM_STEPS\}:DecompositionSystemStateStepBuilderStd\{range_space_matrix=ORTHOGONAL\}:NLPAlgoConfigMamaJama\{line_search_method=FILTER\}:NLPDirectTester\{Gc_error_tol=0.2\}";
#    COMM = SERIAL, MPI(1);
#}

#(FRAMEWORK,INSTALL,MOOCHOBELOSP2) {
#    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
#    ARGS = --do-opt --use-direct --np=2 --geom-file-base=../thyra/example/NLPThyraEpetraAdvDiffReactOpt/square.9x9.2 \ 
#    --use-first-order --lowsf=belos \ 
#    --lowsf-extra-params="<ParameterList><Parameter name=\"Block Size\" type=\"int\" value=\"1\"/></ParameterList>" \ 
#    --moocho-extra-options="MoochoSolver\{test_nlp=false\}:NLPSolverClientInterface\{opt_tol=1e-4\,feas_tol=1e-8\,max_iter=12\,journal_output_level=PRINT_NOTHING\}";
#    COMM = MPI(2);
#}

# This test can't work since I can't read a file from a prior test
#(FRAMEWORK,INSTALL,MOOCHOBELOSP4) {
#    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/NLPThyraEpetraAdvDiffReactOpt.exe;
#    ARGS = --len-x=1.0 --len-y=10.0 --local-nx=3 --local-ny=4 --reaction-rate=1e-3 \
#    --do-opt --use-direct --beta=0.0 --lowsf=belos --q-vec-file=x_solu.out \
#    --moocho-extra-options="MoochoSolver\{test_nlp=false\}:NLPSolverClientInterface\{opt_tol=1e-3\,feas_tol=1e-8\,max_iter=11\,journal_output_level=PRINT_NOTHING\}";
#    COMM = MPI(2,4);
#}


# These following tests are just to make sure the
# Thyra::DefaultClusteredSpmdVector[Space] classes work correctly!

(FRAMEWORK,INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/MultiPeriodNLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --num-procs-per-cluster=1 --skip-solve;
    COMM = MPI,SERIAL;
}

(FRAMEWORK,INSTALL) {
    TESTS = ../thyra/example/NLPThyraEpetraAdvDiffReactOpt/MultiPeriodNLPThyraEpetraAdvDiffReactOpt.exe;
    ARGS = --num-procs-per-cluster=2 --skip-solve;
    COMM = MPI(2,4,6,8);
}
