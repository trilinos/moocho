/** \mainpage Simple Example NLP with Direct Sensitivities.

This project contains a simple scalable example NLP that implements the
<tt>\ref NLPInterfacePack::NLPDirect "NLPDirect"</tt> interface.

The NLP subclass <tt>\ref NLPInterfacePack::ExampleNLPFirstOrderDirect "ExampleNLPFirstOrderDirect"</tt>
represents an complete NLP implementation for a very simple example NLP.  This NLP implemementation is
defined given a single <tt>\ref AbstractLinAlgPack::VectorSpace "VectorSpace"</tt> object.  Therefore,
this NLP implementation can be used with any type of vector implementation and can be used in any type of
computing environment.  This is only possible because of the very simple structure of this example NLP.

This example NLP subclass relies on a few specialized vector reduction transformation operators
(<A HREF="../../RTOpPack/html/index.html">RTOp</A>).
These are C operators that are declared in the header file <tt>ExampleNLPFirstOrderDirectRTOps.h</tt> and
implemented in the source file <tt>ExampleNLPFirstOrderDirectRTOps.c</tt>.  These operators are documented
\ref explnlp2_ops_grp "here".  Since these operators are
implemented in C (as are all the rest of the RTOp operators in the other libraries) this code should be
able to run on any platform.

Also included in this package is an encapsulation function <tt>ExampleNLPFirstOrderDirectRun()</tt>
declared in the header file <tt>ExampleNLPFirstOrderDirectRun.hpp</tt>.  This helper function creates an
<tt>\ref NLPInterfacePack::ExampleNLPFirstOrderDirect "ExampleNLPFirstOrderDirect"</tt> object
(given an input vector space object) and then calls
<tt>\ref NLPInterfacePack::test_nlp_first_order_direct "test_nlp_first_order_direct()"</tt> to run
the %NLP object through a series of tests.

Finally, a driver program is included in the source file <tt>ExampleNLPFirstOrderDirectMain.cpp</tt> that
accepts command line arguments and uses one of a number of vector implementations to call the testing
function <tt>%ExampleNLPFirstOrderDirectRun()"</tt>.  All that needs to be replaced to use different
vector implementations is this driver program file and this can be done in a different project.

*/
